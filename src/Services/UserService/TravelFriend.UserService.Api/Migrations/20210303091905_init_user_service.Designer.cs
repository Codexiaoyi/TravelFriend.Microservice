// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelFriend.UserService.Infrastructure;

namespace TravelFriend.UserService.Api.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20210303091905_init_user_service")]
    partial class init_user_service
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("TravelFriend.UserService.Domain.PersonalAggregate.Personal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("personal");
                });

            modelBuilder.Entity("TravelFriend.UserService.Domain.TeamAggregate.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsLeader")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("team_member");
                });

            modelBuilder.Entity("TravelFriend.UserService.Domain.TeamAggregate.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CreatePerson")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Introduction")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("team");
                });

            modelBuilder.Entity("TravelFriend.UserService.Domain.PersonalAggregate.Personal", b =>
                {
                    b.OwnsOne("TravelFriend.UserService.Domain.PersonalAggregate.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("PersonalId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("City")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10) CHARACTER SET utf8mb4");

                            b1.Property<string>("Province")
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                            b1.Property<string>("Street")
                                .HasMaxLength(50)
                                .HasColumnType("varchar(50) CHARACTER SET utf8mb4");

                            b1.HasKey("PersonalId");

                            b1.ToTable("personal");

                            b1.WithOwner()
                                .HasForeignKey("PersonalId");
                        });

                    b.OwnsOne("TravelFriend.UserService.Domain.PersonalAggregate.Birthday", "Birthday", b1 =>
                        {
                            b1.Property<Guid>("PersonalId")
                                .HasColumnType("char(36)");

                            b1.Property<int>("Day")
                                .HasColumnType("int");

                            b1.Property<int>("Month")
                                .HasColumnType("int");

                            b1.Property<int>("Year")
                                .HasColumnType("int");

                            b1.HasKey("PersonalId");

                            b1.ToTable("personal");

                            b1.WithOwner()
                                .HasForeignKey("PersonalId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Birthday");
                });
#pragma warning restore 612, 618
        }
    }
}
